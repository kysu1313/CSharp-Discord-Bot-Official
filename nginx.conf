
worker_rlimit_nofile 8192;

events {
    worker_connections  2048;
    use epoll;
}

server {
    listen 80;
    listen [::]:80;
    listen 5001;
    listen 443 ssl;
    listen [::]:443 ssl;
    #server_name ubu.blazor.server;
    #return 302 https://$server_name$request_uri;
}

server {

    # SSL configuration
    listen 80;
    listen [::]:80;
    listen 5001;
    listen 5002;
    listen 5003;
    listen 5004;
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate         /etc/ssl/certs/cert.pem;
    ssl_certificate_key     /etc/ssl/private/key.pem;

    #server_name ubu.blazor.server;

    root /usr/local/webapp/nginx/html;


    location / {
            #proxy_pass http://localhost:5002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
}

#worker_processes 1;  
  
#events {  
#    worker_connections 1024;  
#}  
  
#http {  
#    include mime.types;  
#     #include the required MIME types  
#    for NGINX  
#    keepalive_timeout 65;   
#    #connection timeout  
#    for worker_processes  
  
#    upstream dotnetcore {  
#        server ConsoleBackend: 5003;  
#        server WebFrontend: 5001; 
#    }  
  
#    server {  
#        listen 80;  
#     #port to listen on  
  
#        location / {  
#            root /usr/local/webapp/nginx/html;
#            try_files $uri $uri/ /index.html =404;
#            proxy_pass http://127.0.0.1:5001; # Home page for App  
#        }  
#    }  
#}  

#events { }
#http {
#    include mime.types;
#    #types {
#    #    application/wasm wasm;
#    #}

#    server {
#        listen 80;

#        # Here, we set the location for Nginx to serve the files
#        # by looking for index.html
#        location / {
#            root /usr/local/webapp/nginx/html;
#            try_files $uri $uri/ /index.html =404;
#            proxy_pass http://127.0.0.1:5001;
#        }
#    }
#}

#events { }
#http {
#    map $http_upgrade $connection_upgrade {
#        default Upgrade;
#        ''      close;
#    }

#    server {
#        listen      80;
#        server_name example.com *.example.com;
#        location / {
#            root /usr/local/webapp/nginx/html;
#            proxy_pass         http://localhost:5001;
#            proxy_http_version 1.1;
#            proxy_set_header   Upgrade $http_upgrade;
#            proxy_set_header   Connection $connection_upgrade;
#            proxy_set_header   Host $host;
#            proxy_cache_bypass $http_upgrade;
#            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#            proxy_set_header   X-Forwarded-Proto $scheme;
#        }
#    }
#}

# http {
#     include mime.types;
#     types {
#         application/wasm wasm;
#     }
# 
#     server {
#         listen 80;
# 
#         # Set the location for Nginx to serve the files
#         # by looking for index.html
#         location / {
#             root /usr/local/webapp/nginx/html;
#             try_files $uri $uri/ /index.html =404;
#         }
#     }
# }