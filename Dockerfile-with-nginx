
FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base
WORKDIR /app

FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /src
COPY ../DiscBotConsole.sln ./
COPY ["DiscBotConsole/DiscBotConsole.csproj", "DiscBotConsole/"]
COPY ["BotApi/BotApi.csproj", "BotApi/"]
COPY ["BotDash/BotDash.csproj", "BotDash/"]
COPY ["ClassLibrary/ClassLibrary.csproj", "ClassLibrary/"]
COPY ["BusinessLogic/BusinessLogic.csproj", "BusinessLogic/"]

# "DiscBotConsole/DiscBotConsole.csproj"
RUN dotnet restore 
COPY . .
WORKDIR "/src/DiscBotConsole"
RUN dotnet build "DiscBotConsole.csproj" -c Release -o /app

WORKDIR "/src/BotApi"
RUN dotnet build "BotApi.csproj" -c Release -o /app

WORKDIR "/src/BotDash"
RUN dotnet build "BotDash.csproj" -c Release -o /app

FROM build AS publish
RUN dotnet publish -c Release -o /app/publish
#ENV ASPNETCORE_ENVIRONMENT Development

EXPOSE 80
EXPOSE 443
EXPOSE 5003
EXPOSE 5004

# We then get the base image for Nginx and set the 
# work directory 
FROM nginx:alpine AS final
WORKDIR /usr/share/nginx/html

# We'll copy all the contents from wwwroot in the publish
# folder into nginx/html for nginx to serve. The destination
# should be the same as what you set in the nginx.conf.
COPY --from=publish /app/publish/wwwroot /usr/local/webapp/nginx/html
COPY nginx.conf /etc/nginx/nginx.conf

ENTRYPOINT ["dotnet", "DiscBotConsole.dll"]

#FROM build AS publish
#RUN dotnet publish -c Release -o /app
#
#FROM base AS final
#WORKDIR /app
#COPY --from=publish /app .
#
#
#ENTRYPOINT ["dotnet", "DiscBotConsole.dll"]
